plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.4'
    id 'io.spring.dependency-management' version '1.1.0'
    id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'com.subway'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorExt
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
// spring
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // log
    implementation 'net.rakugakibox.spring.boot:logback-access-spring-boot-starter:2.7.1'

    // jgraph
    implementation 'org.jgrapht:jgrapht-core:1.0.1'

    // jwt
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    // rest docs
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor:3.0.0'
    testImplementation 'org.springframework.restdocs:spring-restdocs-restassured:2.0.5.RELEASE'
    testImplementation 'org.springframework.restdocs:spring-restdocs-restassured:3.0.0'

    // test
    testImplementation 'io.rest-assured:rest-assured:5.3.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // jgrapht
    implementation 'org.jgrapht:jgrapht:1.5.1'

    runtimeOnly 'com.h2database:h2'

    implementation 'javax.xml.bind:jaxb-api:2.3.1'

}

ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    useJUnitPlatform()
    outputs.dir snippetsDir
}


//문서화를 위해 모든 테스트를 수행하면 비효율적
//문서화 테스트만 수행할 수 있게 패키지 분리
//filter를 통해 documentation 테스트만 수행
task testDocument(type: Test) {
    useJUnitPlatform()
    filter {
        includeTestsMatching "*.documentation.*"
    }
}

asciidoctor {
    inputs.dir snippetsDir
    configurations 'asciidoctorExt'
    dependsOn test
}

//배포 후 문서 접근을 위해 static 디렉토리로 옮겨야 함
//task 재정의를 통해 문서를 static/docs로 옮기기
bootJar {
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}

// 로컬에서 애플리케이션 실행 후 문서 확인 가능
task copyDocument(type: Copy) {
    dependsOn asciidoctor

    from file("${asciidoctor.outputDir}/html5")
    into file("src/main/resources/static/docs")
}

